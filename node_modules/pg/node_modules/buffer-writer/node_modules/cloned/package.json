{
  "name": "cloned",
  "version": "0.0.1",
  "description": "clones a module at the given revision",
  "main": "index.js",
  "dependencies": {
    "rmdir": "~1.0.0"
  },
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianc/node-require-sha.git"
  },
  "keywords": [
    "require",
    "git",
    "history",
    "version",
    "benchmark"
  ],
  "author": {
    "name": "Brian M. Carlson"
  },
  "license": "MIT",
  "readme": "# cloned\n\nClone a local or remote git repository at a specific revision.  Then do an `npm install` in it if it has a `package.json` file.\n\n## api\n\n`var cloned = require('cloned');`\n\n### cloned(revision, callback(err, pathToRepository))\n\n`revision` : _string_ - either a path to a repo such as `'git://github.com/brianc/node-cloned@ea1883'` or just a sha `'ea1883'`.  If just given a sha, it will clone the git repo found in `process.cwd`\n\n`callback` : _function_ - callback when the repository is cloned\n  `err`: _object_ - error if there was an error cloning\n  `pathToRepository`: _string_ - path to cloned repository\n\n\n## examples\n\n```js\nvar cloned = require('cloned');\n\n//clone the current git repository (found at process.cwd) to a specific revision\ncloned('ea1883', function(err, dir) {\n\n});\n\n```\n\n```js\nvar cloned = require('cloned');\n\n//clone a remote repository at a specific revision\ncloned('https://github.com/brianc/node-cloned@ea18834', function(err, dir) {\n\n});\n```\n\n## license\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/brianc/node-require-sha/issues"
  },
  "_id": "cloned@0.0.1",
  "_from": "cloned@0.0.1"
}
